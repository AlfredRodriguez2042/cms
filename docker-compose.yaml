version: '3.7'
services:
  db:
    image: postgres:alpine
    container_name: mypostgres
    ports:
      - '5432'
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: postgres
      POSTGRES_USER: postgres
      POSTGRES_DB: practica
      POSTGRES_HOST_AUTH_METHOD: 'trust'
  #  volumes:

  storage:
    image: redis:alpine
    container_name: myredis
    networks:
      - backend
    ports:
      - '6379'
  #   volumes:
  #    - ~/Docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf

  servernode:
    container_name: server
    build:
      context: ./server
      dockerfile: Dockerfile
    command: npm run dev
    networks:
      - backend
    ports:
      - 5500:5500
    volumes:
      - ./server:/app
    environment:
      POSTGRES_DB: db
      REDIS_HOST: storage
    depends_on:
      - db
      - storage

  # netdata:
  #   image: netdata/netdata
  #   hostname: kuro.com # set to fqdn of host
  #   ports:
  #     - 19999:19999
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - apparmor:unconfined
  #   volumes:
  #     - /etc/passwd:/host/etc/passwd:ro
  #     - /etc/group:/host/etc/group:ro
  #     - /proc:/host/proc:ro # ro is Read Only
  #     - /sys:/host/sys:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   #   - netdata-etc:/etc/netdata
  #   depends_on:
  #     - servernode

networks:
  backend:
    driver: bridge

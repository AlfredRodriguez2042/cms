version: '3.9'
services:
  db:
    image: ${DB_IMAGE}
    container_name: postgresql
    ports:
      - '${POSTGRES_PORT:-5432}'
    networks:
      - backend
    environment:
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_DB: '${POSTGRES_DB:-practica}'
      # POSTGRES_HOST_AUTH_METHOD: 'trust' no secure in production
    volumes:
      - ~/Desktop/Docker/postgres/data:/var/lib/postgresql/data

  storage:
    image: ${STORAGE_IMAGE}
    container_name: redis
    deploy:
      resources:
        limits:
          cpus: '0.50'
          memory: 50M
        reservations:
          cpus: '0.25'
          memory: 20M
    networks:
      - backend
    ports:
      - '${REDIS_POSRT:-6379}'
    command: 'redis-server --appendonly yes --requirepass ${REDIS_SECRET}'
    volumes:
      - ~/Escritorio/Docker/redis/conf/redis.conf:/usr/local/etc/redis/redis.conf:ro
      - ~/Escritorio/Docker/redis/data:/data

  server:
    container_name: server
    image: graphql
    build:
      context: ./server
      dockerfile: Dockerfile
    command: npm run dev
    networks:
      - backend
    ports:
      - ${BACKEND_PORT}
    volumes:
      - ./server:/app
    env_file:
      - .env
    environment:
      POSTGRES_HOST: db
      REDIS_HOST: storage
      POSTGRES_PASSWORD: '${POSTGRES_PASSWORD:-postgres}'
      POSTGRES_USER: '${POSTGRES_USER:-postgres}'
      POSTGRES_DB: '${POSTGRES_DB:-practica}'
    links:
      - db
    depends_on:
      - db
      - storage
  client:
    image: react
    #  container_name: client  # need container name hash
    build:
      context: ./client
      dockerfile: Dockerfile
    command: npm start
    networks:
      - backend
    ports:
      - 5000:3000
    deploy:
      mode: replicated
      replicas: 2
    volumes:
      - ./client:/app
      - /app/node_modules
    environment:
      BACKEND_HOST: server
      BACKEND_PORT: ${BACKEND_PORT}
    links:
      - 'server'

  # netdata:
  #   image: netdata/netdata
  #   hostname: kuro.com # set to fqdn of host
  #   ports:
  #     - 19999:19999
  #   cap_add:
  #     - SYS_PTRACE
  #   security_opt:
  #     - apparmor:unconfined
  #   volumes:
  #     - /etc/passwd:/host/etc/passwd:ro
  #     - /etc/group:/host/etc/group:ro
  #     - /proc:/host/proc:ro # ro is Read Only
  #     - /sys:/host/sys:ro
  #     - /var/run/docker.sock:/var/run/docker.sock:ro
  #   #   - netdata-etc:/etc/netdata
  #   depends_on:
  #     - servernode

networks:
  backend:
    external: true
    name: backend
    driver: bridge
